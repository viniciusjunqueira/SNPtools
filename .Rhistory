pkgdown::build_site()
# Build the package
{
options(pkgdown.internet = FALSE)
Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
gwtwd()
getwd()
install.packages("devtools")
# Build the package
{
options(pkgdown.internet = FALSE)
Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
# Build the package
{
options(pkgdown.internet = FALSE)
Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
# Build the package
{
options(pkgdown.internet = FALSE)
Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
install.packages(c("snpStats", "reshape2"))
# Build the package
{
options(pkgdown.internet = FALSE)
Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
getwd()
install.packages("devtools")
install.packages(c("snpStats", "reshape2"))
install.packages(c("reshape2"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("snpStats")
# Build the package
{
# options(pkgdown.internet = FALSE)
# Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
.Last.error
devtools::document()
# Build the package
{
# options(pkgdown.internet = FALSE)
# Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
devtools::document()
# Build the package
{
# options(pkgdown.internet = FALSE)
# Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
# Install devtools if not already installed
install.packages("devtools")
# Install SNPtools from GitHub
devtools::install_github("viniciusjunqueira/SNPtools")
usethis::edit_r_environ()
# Install SNPtools from GitHub
devtools::install_github("viniciusjunqueira/SNPtools")
library(SNPtools)
# Build the package
{
# options(pkgdown.internet = FALSE)
# Sys.setenv("PKGDOWN_INTERNET" = "false")
# setwd("/home/vinicius/projects/brangus/SNPtools")
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
}
# Build the package
{
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
desc <- read.dcf(file.path(pkg_dir, "DESCRIPTION"))
versao <- desc[1, "Version"]
pdf_out <- file.path(pkg_dir, paste0("SNPtools_", versao, ".pdf"))
if (file.exists(pdf_out)) file.remove(pdf_out)
cmd <- paste("R CMD Rd2pdf", shQuote(pkg_dir), "-o", shQuote(pdf_out))
system(cmd)
if (file.exists(pdf_out)) {
message("PDF manual successfully generated: ", pdf_out)
# Uncomment to open automatically:
browseURL(pdf_out)
} else {
warning("PDF manual generation failed!")
}
system(paste("R CMD build", shQuote(pkg_dir)))
}
desc <- read.dcf(file.path(pkg_dir, "DESCRIPTION"))
desc <- read.dcf(file.path(getwd(), "DESCRIPTION"))
versao <- desc[1, "Version"]
pdf_out <- file.path(pkg_dir, paste0("SNPtools_", versao, ".pdf"))
pkg_dir <- getwd()
desc <- read.dcf(file.path(pkg_dir, "DESCRIPTION"))
versao <- desc[1, "Version"]
pdf_out <- file.path(pkg_dir, paste0("SNPtools_", versao, ".pdf"))
if (file.exists(pdf_out)) file.remove(pdf_out)
cmd <- paste("R CMD Rd2pdf", shQuote(pkg_dir), "-o", shQuote(pdf_out))
system(cmd)
if (file.exists(pdf_out)) {
message("PDF manual successfully generated: ", pdf_out)
# Uncomment to open automatically:
browseURL(pdf_out)
} else {
warning("PDF manual generation failed!")
}
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
pkg_dir <- getwd()
desc <- read.dcf(file.path(pkg_dir, "DESCRIPTION"))
versao <- desc[1, "Version"]
pdf_out <- file.path(pkg_dir, paste0("SNPtools_", versao, ".pdf"))
if (file.exists(pdf_out)) file.remove(pdf_out)
cmd <- paste("R CMD Rd2pdf", shQuote(pkg_dir), "-o", shQuote(pdf_out))
system(cmd)
if (file.exists(pdf_out)) {
message("PDF manual successfully generated: ", pdf_out)
# Uncomment to open automatically:
browseURL(pdf_out)
} else {
warning("PDF manual generation failed!")
}
system(paste("R CMD build", shQuote(pkg_dir)))
?fast_anticlustering
??fast_anticlustering
# Build the package
{
devtools::document()
devtools::clean_dll()
devtools::install(upgrade = "never")
pkgdown::build_site()
pkg_dir <- getwd()
desc <- read.dcf(file.path(pkg_dir, "DESCRIPTION"))
versao <- desc[1, "Version"]
pdf_out <- file.path(pkg_dir, paste0("SNPtools_", versao, ".pdf"))
if (file.exists(pdf_out)) file.remove(pdf_out)
cmd <- paste("R CMD Rd2pdf", shQuote(pkg_dir), "-o", shQuote(pdf_out))
system(cmd)
if (file.exists(pdf_out)) {
message("PDF manual successfully generated: ", pdf_out)
# Uncomment to open automatically:
browseURL(pdf_out)
} else {
warning("PDF manual generation failed!")
}
system(paste("R CMD build", shQuote(pkg_dir)))
}
